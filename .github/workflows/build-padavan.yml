#修改TNAME: K2P 中的K2P为你需要编译的型号，注意名称要与configs/templates/目录下的名字相同
name: Build Padavan

on: 
  release:
    types: [published]
  push:
    tags:
    - 'v*'
  #  branches: 
  #    - master
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]
env:
  UPLOAD_RELEASE: true
  UPLOAD_FIRMWARE: true
  CONFIG_PATH: config
  CONFIG_FILE: .config
  
jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
        fakeroot kmod cpio git python3-docutils gettext automake autopoint \
        texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin liblzma-dev
        
    - name: Init variable
      run: |
        cat $GITHUB_WORKSPACE/$CONFIG_FILE | grep -v "^#.*" | grep -v "^$">> "$GITHUB_ENV"
        
    - name: Clone source code
      env:
        KERNEL: ${{ env.KERNEL }}
      run: |
        if [ $KERNEL = "4.4" ] ; then
          git clone --branch ${{ env.BRANCH_4_4 }} --depth=1 ${{ env.SRC_4_4 }} /opt/rt-n56u
        else
          git clone --branch ${{ env.BRANCH_3_4 }} --depth=1 ${{ env.SRC_3_4 }} /opt/rt-n56u
        fi
        cd /opt/rt-n56u/toolchain-mipsel
        mkdir -p /opt/images/
        
    - name: Build Firmware
      id: BUILD
      run: |
        TNAME=${{ env.TNAME }}
        cd /opt/rt-n56u/trunk

        
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' &&  steps.BUILD.outputs.build == "success" && !cancelled()
      run: |
        cd /opt/images
        #ls | grep -v "packages" | xargs rm -rf
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*


    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 5

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 6
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
